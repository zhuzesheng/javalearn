package Method;

/**
 * 方法在执行过程当中，在JVM中的内存是如何分配的，内存是怎么变化的
 *  1、方法只定义，不调用，是不会执行的，并且在JVM中也不会给该方法分配“运行所属”的内存空间。
 *  只有在调用这个方法的时候，才会动态的给这个方法分配所属的内存空间
 *  2、在JVM内存有三个主要的空间
 *      *方法区内存
 *      *堆内存
 *      *栈内存
 *  3、--方法代码片段属于.class字节码文件的一部分，字节码文件在类加载的时候，将其放到了方法区当中。
 *       所以JVM中的三块主要的内存空间中方法区内存最先有数据。存放了代码片段。
 *     --代码片段虽然在方法区内存当中只有一份，但是可以被重复调用。每一次调用这个方法的时候，需要给该方法分配独立的活动场所，在栈内存中分配。
 *       【占内存中分配方法运行的所属内存空间】
 *  4、方法在调用的瞬间，会给方法分配内存空间，会在栈中发生压栈动作，方法执行结束之后，给该方法分配的内存空间全部释放，此时发生弹栈动作。
 *     --压栈：给方法分配内存
 *     --弹栈：释放该方法的内存空间
 *  5、局部变量在方法体中声明。局部变量运行阶段内存在栈中分配。
 *
 */
public class MethodTest04 {
    public static void main(String[] args) {

    }
}
