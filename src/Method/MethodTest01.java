package Method;

/**
 * 1、方法的定义：
 *       [修饰符列表] 返回值类型 方法名（形式参数列表）{
 *           方法体；
 *       }
 * 2.1关于修饰符列表
 *     可选项，不是必须
 *     方法的修饰符列表当中有static关键字的话 调用方式：类名.方法名（实际参数列表）
 * 2.2返回值类型
 *  --什么是返回值？
 *      一个方法是可以完成某个特定功能的，这个功能结束之后大多数都是需要返回最终执行结果的，执行结果可能是一个具体存在的数据。
 *      而这个具体存在的数据就是返回值。
 *  --返回值类型？
 *      返回值是一个具体存在的数据，数据都是有类型的，此处需要指定的是返回值的具体类型。
 *  --返回值类型都可以指定那些类型呢？
 *      java任意一种类型都可以，包括基本数据类型和所有的引用数据类型。
 *  --也可能这个方法执行结束之后不返回任何数据，java中规定，当一个方法之行结束之后不返回任何数据的话，返回值类型位置必须编写：void关键字。
 *  --返回值类型若不是void，表示这个方法执行结束之后必须返回一个具体的数值。
 *    当方法执行结束的时候没有返回任何数据的话编译器报错。
 *    return 值；
 *  --返回值类型是void的时候，可以编写return；
 * 2.3方法名首字母小写
 * 2.4形式参数列表：简称形参
 *  --形参是局部变量int a；boolean b；
 *  --形参的个数0-N
 *  --多个形参之间用“逗号”隔开
 *  --形参中起决定性作用的是形参的数据类型，形参的名字就是局部变量的名字。
 *  --方法在调用的时候，实际给这个方法传递的真实数据被称为：实际参数，简称实参。
 *  --实参列表和形参列表必须类型对应相同，数量相同
 *      public static void int sum(int a,int b){    //(int a,int b)是形参列表
 *          sum(10,20); //(10,20)是实参列表
 *      }
 * 2.5方法体中的代码有顺序
 *
 * 3、方法调用
 *  语法规则：修饰符列表中有static
 *           类名.方法名（实参列表）;表示调用某个类的某个方法，传递这样的实参。
 */
public class MethodTest01 {
    public static void main(String[] args) {
        /**
         * 这里的程序一定会执行
         * main方法是JVM负责调用的，是一个入口位置
         * 从这里作为起点开始执行
         */
        MethodTest01.sum(10,20);
    }
    //自定义方法，不是程序的入口
    public static void sum(int i,int j){
        System.out.println(i+"+"+j+"="+(i+j));
    }
}
